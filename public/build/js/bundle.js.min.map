{"version":3,"sources":["horas.js","restaurantes.js","tags.js"],"names":["document","querySelector","categoria","dias","querySelectorAll","inputHiddenDia","inputHiddenHora","addEventListener","terminoBusqueda","forEach","dia","busqueda","categoria_id","value","e","target","name","horaPrevia","classList","remove","Object","values","includes","async","url","resultado","fetch","eventos","listadoHoras","li","add","horasTomadas","map","evento","hora_id","listadoHorasArray","Array","from","filter","dataset","horaId","hora","seleccionarHora","obtenerHorasDisponibles","json","buscarEventos","restaurantesInput","restaurantes","restaurantesFiltrados","listadoRestaurantes","restaurateHidden","selecccionarRestaurante","restaurante","restaurantePrevio","restauranteId","respuesta","arrayRestaurantes","nombre","trim","sucursal","id","obtenerRestaurantes","length","expresion","RegExp","toLowerCase","search","firstChild","removeChild","restauranteHTML","createElement","textContent","onclick","appendChild","noResultadosImg","image","src","noResultados","mostrarRestaurantes","tagsInput","tagsDiv","tagsInputHidden","tags","mostrarTag","tag","etiqueta","ondblclick","eliminarTag","actualizarInputHidden","toString","split","keyCode","preventDefault"],"mappings":"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","file":"bundle.js","sourcesContent":[";(function () {\n  const horas = document.querySelector('#horas')\n\n  if (horas) {\n    const categoria = document.querySelector('[name=\"categoria_id\"]')\n    const dias = document.querySelectorAll('[name=\"dia\"]')\n    const inputHiddenDia = document.querySelector('[name=\"dia_id\"]')\n    const inputHiddenHora = document.querySelector('[name=\"hora_id\"]')\n\n    categoria.addEventListener('change', terminoBusqueda)\n\n    dias.forEach((dia) => dia.addEventListener('change', terminoBusqueda))\n\n    let busqueda = {\n      categoria_id: +categoria.value || '',\n      dia: +inputHiddenDia.value || '',\n    }\n\n    function terminoBusqueda(e) {\n      busqueda[e.target.name] = e.target.value\n\n      //Reiniciar los campos ocultos y el selector de horas\n      inputHiddenHora.value = ''\n      inputHiddenDia.value = ''\n\n      const horaPrevia = document.querySelector('.horas__hora--seleccionada')\n      if (horaPrevia) {\n        horaPrevia.classList.remove('horas__hora--seleccionada')\n      }\n\n      if (Object.values(busqueda).includes('')) {\n        return\n      }\n\n      buscarEventos()\n    }\n    async function buscarEventos() {\n      const { dia, categoria_id } = busqueda\n      const url = `/api/eventos-horario?dia_id=${dia}&categoria_id=${categoria_id}`\n\n      const resultado = await fetch(url)\n      const eventos = await resultado.json()\n\n      obtenerHorasDisponibles(eventos)\n    }\n\n    function obtenerHorasDisponibles(eventos) {\n      //reiniciar las horas\n      const listadoHoras = document.querySelectorAll('#horas li')\n      listadoHoras.forEach((li) =>\n        li.classList.add('horas__hora--deshabilitada'),\n      )\n\n      //Comprobar eventos ya tomados y quitar la variable  de deshabilitar\n      const horasTomadas = eventos.map((evento) => evento.hora_id)\n      const listadoHorasArray = Array.from(listadoHoras)\n\n      const resultado = listadoHorasArray.filter(\n        (li) => !horasTomadas.includes(li.dataset.horaId),\n      )\n\n      resultado.forEach((li) =>\n        li.classList.remove('horas__hora--deshabilitada'),\n      )\n\n      const horasDisponibles = document.querySelectorAll(\n        '#horas li:not(.horas__hora--deshabilitada)',\n      )\n      horasDisponibles.forEach((hora) =>\n        hora.addEventListener('click', seleccionarHora),\n      )\n    }\n\n    function seleccionarHora(e) {\n      //deshabilitar la hora previa si hay un nuevo click\n      const horaPrevia = document.querySelector('.horas__hora--seleccionada')\n      if (horaPrevia) {\n        horaPrevia.classList.remove('horas__hora--seleccionada')\n      }\n\n      //Agregar clase de seleccionado\n      e.target.classList.add('horas__hora--seleccionada')\n\n      inputHiddenHora.value = e.target.dataset.horaId\n\n      //llenar el campo oculto de día\n      inputHiddenDia.value = document.querySelector(\n        '[name=\"dia\"]:checked',\n      ).value\n    }\n  }\n})()\n",";(function () {\n  const restaurantesInput = document.querySelector('#restaurantes')\n\n  if (restaurantesInput) {\n    let restaurantes = []\n    let restaurantesFiltrados = []\n\n    const listadoRestaurantes = document.querySelector('#listado-restaurantes')\n    const restaurateHidden = document.querySelector('[name=\"restaurante_id\"]')\n\n    obtenerRestaurantes()\n\n    restaurantesInput.addEventListener('input', buscarRestaurantes)\n\n    async function obtenerRestaurantes() {\n      const url = `/api/restaurantes`\n\n      const respuesta = await fetch(url)\n      const resultado = await respuesta.json()\n\n      formatearRestaurantes(resultado)\n    }\n\n    function formatearRestaurantes(arrayRestaurantes) {\n      restaurantes = arrayRestaurantes.map((restaurante) => {\n        return {\n          nombre: `${restaurante.nombre.trim()} / ${restaurante.sucursal.trim()}`,\n          id: restaurante.id,\n        }\n      })\n    }\n    function buscarRestaurantes(e) {\n      const busqueda = e.target.value\n      if (busqueda.length > 0) {\n        const expresion = new RegExp(busqueda, 'i')\n        restaurantesFiltrados = restaurantes.filter((restaurante) => {\n          if (restaurante.nombre.toLowerCase().search(expresion) != -1) {\n            return restaurante\n          }\n        })\n      } else {\n        restaurantesFiltrados = []\n      }\n\n      mostrarRestaurantes()\n\n      function mostrarRestaurantes() {\n        while (listadoRestaurantes.firstChild) {\n          listadoRestaurantes.removeChild(listadoRestaurantes.firstChild)\n        }\n\n        if (restaurantesFiltrados.length > 0) {\n          restaurantesFiltrados.forEach((restaurante) => {\n            const restauranteHTML = document.createElement('LI')\n            restauranteHTML.classList.add('listado-restaurantes__restaurante')\n            restauranteHTML.textContent = restaurante.nombre\n            restauranteHTML.dataset.restauranteId = restaurante.id\n            restauranteHTML.onclick = selecccionarRestaurante\n\n            //añadir al DOM\n            listadoRestaurantes.appendChild(restauranteHTML)\n          })\n        } else {\n          // Imagen\n          const noResultadosImg = document.createElement('DIV')\n          noResultadosImg.classList.add('listado-restaurantes__no-resultado')\n          listadoRestaurantes.appendChild(noResultadosImg)\n          const image = document.createElement('img')\n          image.src = '/../build/img/noData.gif'\n          document\n            .querySelector('.listado-restaurantes__no-resultado')\n            .appendChild(image)\n          // Parrafo\n          const noResultados = document.createElement('P')\n          noResultados.classList.add('listado-restaurantes__no-resultado--p')\n          noResultados.textContent = 'No hay resultados'\n\n          listadoRestaurantes.appendChild(noResultados)\n        }\n      }\n    }\n    function selecccionarRestaurante(e) {\n      const restaurante = e.target\n\n      //remover la clase previa\n      const restaurantePrevio = document.querySelector(\n        '.listado-restaurantes__restaurante--seleccionado',\n      )\n      if (restaurantePrevio) {\n        restaurantePrevio.classList.remove(\n          'listado-restaurantes__restaurante--seleccionado',\n        )\n      }\n\n      restaurante.classList.add(\n        'listado-restaurantes__restaurante--seleccionado',\n      )\n      restaurateHidden.value = restaurante.dataset.restauranteId\n    }\n  }\n})()\n",";(function () {\n  const tagsInput = document.querySelector('#tags__input')\n\n  if (tagsInput) {\n    const tagsDiv = document.querySelector('#tags')\n    const tagsInputHidden = document.querySelector('[name=\"tags\"]')\n\n    let tags = []\n\n    //Recuperar del input oculto\n    if (tagsInputHidden.value != '') {\n      tags = tagsInputHidden.value.split(',')\n      mostrarTag()\n    }\n\n    // Escuchar cambios en el input\n    tagsInput.addEventListener('keypress', guardarTag)\n\n    function guardarTag(e) {\n      if (e.keyCode === 44) {\n        if (e.target.value.trim() === '' || e.target.value < 1) {\n          return\n        }\n        e.preventDefault()\n        tags = [...tags, e.target.value.trim()]\n        tagsInput.value = ''\n\n        mostrarTag()\n      }\n    }\n\n    function mostrarTag() {\n      tagsDiv.textContent = ''\n      tags.forEach((tag) => {\n        const etiqueta = document.createElement('LI')\n        etiqueta.classList.add('formulario__tag')\n        etiqueta.textContent = tag\n        etiqueta.ondblclick = eliminarTag\n        tagsDiv.appendChild(etiqueta)\n      })\n      actualizarInputHidden()\n    }\n\n    function eliminarTag(e) {\n      e.target.remove()\n\n      tags = tags.filter((tag) => tag !== e.target.textContent)\n      actualizarInputHidden()\n    }\n\n    function actualizarInputHidden() {\n      tagsInputHidden.value = tags.toString()\n    }\n  }\n})()\n"]}