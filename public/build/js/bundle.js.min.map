{"version":3,"sources":["horas.js","restaurantes.js","tags.js"],"names":["document","querySelector","categoria","dias","querySelectorAll","inputHiddenDia","inputHiddenHora","addEventListener","terminoBusqueda","forEach","dia","busqueda","categoria_id","value","Object","values","includes","async","buscarEventos","id","horaSeleccionada","classList","remove","add","onclick","seleccionarHora","inicia","e","target","name","horaPrevia","url","resultado","fetch","eventos","listadoHoras","li","horasTomadas","map","evento","hora_id","listadoHorasArray","Array","from","filter","dataset","horaId","hora","obtenerHorasDisponibles","json","restaurantesInput","restaurantes","restaurantesFiltrados","listadoRestaurantes","restaurateHidden","selecccionarRestaurante","restaurante","restaurantePrevio","restauranteId","respuesta","arrayRestaurantes","nombre","trim","sucursal","obtenerRestaurantes","length","expresion","RegExp","toLowerCase","search","firstChild","removeChild","restauranteHTML","createElement","textContent","appendChild","noResultadosImg","image","src","noResultados","mostrarRestaurantes","obtenerRestaurante","restauranteDOM","tagsInput","tagsDiv","tagsInputHidden","tags","mostrarTag","tag","etiqueta","ondblclick","eliminarTag","actualizarInputHidden","toString","split","keyCode","preventDefault"],"mappings":"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","file":"bundle.js","sourcesContent":[";(function () {\n  const horas = document.querySelector('#horas')\n\n  if (horas) {\n    const categoria = document.querySelector('[name=\"categoria_id\"]')\n    const dias = document.querySelectorAll('[name=\"dia\"]')\n    const inputHiddenDia = document.querySelector('[name=\"dia_id\"]')\n    const inputHiddenHora = document.querySelector('[name=\"hora_id\"]')\n\n    categoria.addEventListener('change', terminoBusqueda)\n\n    dias.forEach((dia) => dia.addEventListener('change', terminoBusqueda))\n\n    let busqueda = {\n      categoria_id: +categoria.value || '',\n      dia: +inputHiddenDia.value || '',\n    }\n\n    if (!Object.values(busqueda).includes('')) {\n      async function inicia() {\n        await buscarEventos()\n        const id = inputHiddenDia.value\n\n        // resaltar hora actual\n        const horaSeleccionada = document.querySelector(\n          `[data-hora-id=\"${id}\"]`,\n        )\n        horaSeleccionada.classList.remove('horas__hora--deshabilitada')\n        horaSeleccionada.classList.add('horas__hora--seleccionada')\n        horaSeleccionada.onclick = seleccionarHora\n      }\n      inicia()\n    }\n\n    function terminoBusqueda(e) {\n      busqueda[e.target.name] = e.target.value\n\n      //Reiniciar los campos ocultos y el selector de horas\n      inputHiddenHora.value = ''\n      inputHiddenDia.value = ''\n\n      const horaPrevia = document.querySelector('.horas__hora--seleccionada')\n      if (horaPrevia) {\n        horaPrevia.classList.remove('horas__hora--seleccionada')\n      }\n\n      if (Object.values(busqueda).includes('')) {\n        return\n      }\n\n      buscarEventos()\n    }\n    async function buscarEventos() {\n      const { dia, categoria_id } = busqueda\n      const url = `/api/eventos-horario?dia_id=${dia}&categoria_id=${categoria_id}`\n\n      const resultado = await fetch(url)\n      const eventos = await resultado.json()\n\n      obtenerHorasDisponibles(eventos)\n    }\n\n    function obtenerHorasDisponibles(eventos) {\n      //reiniciar las horas\n      const listadoHoras = document.querySelectorAll('#horas li')\n      listadoHoras.forEach((li) =>\n        li.classList.add('horas__hora--deshabilitada'),\n      )\n\n      //Comprobar eventos ya tomados y quitar la variable  de deshabilitar\n      const horasTomadas = eventos.map((evento) => evento.hora_id)\n      const listadoHorasArray = Array.from(listadoHoras)\n\n      const resultado = listadoHorasArray.filter(\n        (li) => !horasTomadas.includes(li.dataset.horaId),\n      )\n\n      resultado.forEach((li) =>\n        li.classList.remove('horas__hora--deshabilitada'),\n      )\n\n      const horasDisponibles = document.querySelectorAll(\n        '#horas li:not(.horas__hora--deshabilitada)',\n      )\n      horasDisponibles.forEach((hora) =>\n        hora.addEventListener('click', seleccionarHora),\n      )\n    }\n\n    function seleccionarHora(e) {\n      //deshabilitar la hora previa si hay un nuevo click\n      const horaPrevia = document.querySelector('.horas__hora--seleccionada')\n      if (horaPrevia) {\n        horaPrevia.classList.remove('horas__hora--seleccionada')\n      }\n\n      //Agregar clase de seleccionado\n      e.target.classList.add('horas__hora--seleccionada')\n\n      inputHiddenHora.value = e.target.dataset.horaId\n\n      //llenar el campo oculto de dÃ­a\n      inputHiddenDia.value = document.querySelector(\n        '[name=\"dia\"]:checked',\n      ).value\n    }\n  }\n})()\n",";(function () {\n  const restaurantesInput = document.querySelector('#restaurantes')\n\n  if (restaurantesInput) {\n    let restaurantes = []\n    let restaurantesFiltrados = []\n\n    const listadoRestaurantes = document.querySelector('#listado-restaurantes')\n    const restaurateHidden = document.querySelector('[name=\"restaurante_id\"]')\n\n    obtenerRestaurantes()\n\n    restaurantesInput.addEventListener('input', buscarRestaurantes)\n\n    if (restaurateHidden.value) {\n      ;(async () => {\n        const restaurante = await obtenerRestaurante(restaurateHidden.value)\n\n        //insertar en html\n        const restauranteDOM = document.createElement('LI')\n        restauranteDOM.classList.add(\n          'listado-restaurantes__restaurante',\n          'listado-restaurantes__restaurante--seleccionado',\n        )\n        restauranteDOM.textContent = `${restaurante.nombre} / ${restaurante.sucursal}`\n\n        listadoRestaurantes.appendChild(restauranteDOM)\n      })()\n    }\n\n    async function obtenerRestaurantes() {\n      const url = `/api/restaurantes`\n\n      const respuesta = await fetch(url)\n      const resultado = await respuesta.json()\n\n      formatearRestaurantes(resultado)\n    }\n\n    async function obtenerRestaurante(id) {\n      const url = `/api/restaurante?id=${id}`\n      const respuesta = await fetch(url)\n      const resultado = await respuesta.json()\n      return resultado\n    }\n\n    function formatearRestaurantes(arrayRestaurantes) {\n      restaurantes = arrayRestaurantes.map((restaurante) => {\n        return {\n          nombre: `${restaurante.nombre.trim()} / ${restaurante.sucursal.trim()}`,\n          id: restaurante.id,\n        }\n      })\n    }\n    function buscarRestaurantes(e) {\n      const busqueda = e.target.value\n      if (busqueda.length > 0) {\n        const expresion = new RegExp(busqueda, 'i')\n        restaurantesFiltrados = restaurantes.filter((restaurante) => {\n          if (restaurante.nombre.toLowerCase().search(expresion) != -1) {\n            return restaurante\n          }\n        })\n      } else {\n        restaurantesFiltrados = []\n      }\n\n      mostrarRestaurantes()\n\n      function mostrarRestaurantes() {\n        while (listadoRestaurantes.firstChild) {\n          listadoRestaurantes.removeChild(listadoRestaurantes.firstChild)\n        }\n\n        if (restaurantesFiltrados.length > 0) {\n          restaurantesFiltrados.forEach((restaurante) => {\n            const restauranteHTML = document.createElement('LI')\n            restauranteHTML.classList.add('listado-restaurantes__restaurante')\n            restauranteHTML.textContent = restaurante.nombre\n            restauranteHTML.dataset.restauranteId = restaurante.id\n            restauranteHTML.onclick = selecccionarRestaurante\n\n            //aÃ±adir al DOM\n            listadoRestaurantes.appendChild(restauranteHTML)\n          })\n        } else {\n          // Imagen\n          const noResultadosImg = document.createElement('DIV')\n          noResultadosImg.classList.add('listado-restaurantes__no-resultado')\n          listadoRestaurantes.appendChild(noResultadosImg)\n          const image = document.createElement('img')\n          image.src = '/../build/img/noData.gif'\n          document\n            .querySelector('.listado-restaurantes__no-resultado')\n            .appendChild(image)\n          // Parrafo\n          const noResultados = document.createElement('P')\n          noResultados.classList.add('listado-restaurantes__no-resultado--p')\n          noResultados.textContent = 'No hay resultados'\n\n          listadoRestaurantes.appendChild(noResultados)\n        }\n      }\n    }\n    function selecccionarRestaurante(e) {\n      const restaurante = e.target\n\n      //remover la clase previa\n      const restaurantePrevio = document.querySelector(\n        '.listado-restaurantes__restaurante--seleccionado',\n      )\n      if (restaurantePrevio) {\n        restaurantePrevio.classList.remove(\n          'listado-restaurantes__restaurante--seleccionado',\n        )\n      }\n\n      restaurante.classList.add(\n        'listado-restaurantes__restaurante--seleccionado',\n      )\n      restaurateHidden.value = restaurante.dataset.restauranteId\n    }\n  }\n})()\n",";(function () {\n  const tagsInput = document.querySelector('#tags__input')\n\n  if (tagsInput) {\n    const tagsDiv = document.querySelector('#tags')\n    const tagsInputHidden = document.querySelector('[name=\"tags\"]')\n\n    let tags = []\n\n    //Recuperar del input oculto\n    if (tagsInputHidden.value != '') {\n      tags = tagsInputHidden.value.split(',')\n      mostrarTag()\n    }\n\n    // Escuchar cambios en el input\n    tagsInput.addEventListener('keypress', guardarTag)\n\n    function guardarTag(e) {\n      if (e.keyCode === 44) {\n        if (e.target.value.trim() === '' || e.target.value < 1) {\n          return\n        }\n        e.preventDefault()\n        tags = [...tags, e.target.value.trim()]\n        tagsInput.value = ''\n\n        mostrarTag()\n      }\n    }\n\n    function mostrarTag() {\n      tagsDiv.textContent = ''\n      tags.forEach((tag) => {\n        const etiqueta = document.createElement('LI')\n        etiqueta.classList.add('formulario__tag')\n        etiqueta.textContent = tag\n        etiqueta.ondblclick = eliminarTag\n        tagsDiv.appendChild(etiqueta)\n      })\n      actualizarInputHidden()\n    }\n\n    function eliminarTag(e) {\n      e.target.remove()\n\n      tags = tags.filter((tag) => tag !== e.target.textContent)\n      actualizarInputHidden()\n    }\n\n    function actualizarInputHidden() {\n      tagsInputHidden.value = tags.toString()\n    }\n  }\n})()\n"]}